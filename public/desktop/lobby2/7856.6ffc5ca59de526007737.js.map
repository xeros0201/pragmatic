{"version":3,"file":"7856.6ffc5ca59de526007737.js","mappings":"gOACO,IAAKA,EAAe,SAAfA,GAAe,OAAfA,EAAe,+BAAfA,CAAe,M,YCKpB,MAAMC,EACXC,OAAAA,CAAQC,EAA8BC,GCDgBC,EAACF,EAA0BC,KACzED,IACDH,EAAgBM,eACnBF,EAAMG,SAASC,EAAAA,EAAgBC,QAC/BC,EAAAA,EAAOC,SAAS,QAAS,gBAAiBC,KAAKC,MAAO,EAAG,mBAAmB,GAIhF,EDNER,CAAyCF,EAAQW,KAAMV,EACzD,CAEAW,IAAAA,CAAKZ,EAA0Ba,GAC7B,MAAMF,EEP2CG,EACnDd,EACAa,KAC4B,IAAAE,EAC5B,IAAIC,EAEJ,OAAQhB,GACN,KAAKiB,EAAAA,EAAgBC,WACrB,KAAKD,EAAAA,EAAgBE,UACnBH,EAAUhB,EACV,MACF,KAAKiB,EAAAA,EAAgBG,eACrB,KAAKH,EAAAA,EAAgBI,YACrB,KAAKJ,EAAAA,EAAgBK,cACrB,KAAKL,EAAAA,EAAgBM,SACrB,KAAKN,EAAAA,EAAgBO,YACrB,KAAKP,EAAAA,EAAgBQ,qBACrB,KAAKR,EAAAA,EAAgBS,iBACrB,KAAKT,EAAAA,EAAgBU,kBACrB,KAAKV,EAAAA,EAAgBW,SACrB,KAAKX,EAAAA,EAAgBY,WACnBb,EAAU,CAAEc,OAAqB,QAAff,EAAEF,aAAI,EAAJA,EAAMkB,eAAO,IAAAhB,EAAAA,EAAI,IACrC,MACF,QACE,OAAO,KAEX,MAAO,CACLiB,KAAMhC,EACNW,KAAMK,EACP,EFtBcF,CAAsCd,EAASa,GAClD,IAAAoB,EAANtB,IACQ,QAAVsB,EAAAC,OAAOC,WAAG,IAAAF,GAAVA,EAAYG,YAAYzB,EAAM,KAElC,EAGF,UAAmBb,C","sources":["webpack://@pp/lobby/../libraries/core/src/controllers/crossOriginCommunication/default/types.ts","webpack://@pp/lobby/../libraries/core/src/controllers/crossOriginCommunication/default/CrossOriginCommunicationDefault.ts","webpack://@pp/lobby/../libraries/core/src/controllers/crossOriginCommunication/default/CrossOriginCommunicationDefaultProcessor.ts","webpack://@pp/lobby/../libraries/core/src/controllers/crossOriginCommunication/default/CrossOriginCommunicationDefaultSender.ts"],"sourcesContent":["// Input\nexport enum IncomingMessage {\n  StopAutoplay = '{\"type\":\"Tilt\"}',\n}\n\n// Output\nexport interface IOutgoingMessage {\n  name: string;\n  data?: string | object;\n}\n","import type { ICrossOriginCommunicator, OutgoingInfo } from '../types';\nimport { OutgoingMessage } from '../types';\n\nimport { CrossOriginCommunicationDefaultProcessor } from './CrossOriginCommunicationDefaultProcessor';\nimport { CrossOriginCommunicationDefaultSender } from './CrossOriginCommunicationDefaultSender';\n\nexport class CrossOriginCommunicationDefault implements ICrossOriginCommunicator {\n  process(message: MessageEvent<never>, store: never): void {\n    CrossOriginCommunicationDefaultProcessor(message.data, store);\n  }\n\n  send(message: OutgoingMessage, info: OutgoingInfo): void {\n    const data = CrossOriginCommunicationDefaultSender(message, info);\n    if (data) {\n      window.top?.postMessage(data, '*');\n    }\n  }\n}\n\nexport default new CrossOriginCommunicationDefault();\n","import { Logger } from '../../../logger/Logger';\nimport type { CoreStoreType } from '../../../store/CoreStore';\nimport { autoplayActions } from '../../../store/slices/autoplay/slice';\n\nimport { IncomingMessage } from './types';\n\nexport const CrossOriginCommunicationDefaultProcessor = (message: IncomingMessage, store: CoreStoreType): void => {\n  switch (message) {\n    case IncomingMessage.StopAutoplay:\n      store.dispatch(autoplayActions.stop());\n      Logger.logEvent('click', 'autoplay_stop', Date.now(), 1, 'OperatorRequest', false);\n      break;\n    default:\n      break;\n  }\n};\n","import type { OutgoingInfo } from '../types';\nimport { OutgoingMessage } from '../types';\n\nimport type { IOutgoingMessage } from './types';\n\nexport const CrossOriginCommunicationDefaultSender = (\n  message: OutgoingMessage,\n  info?: OutgoingInfo\n): IOutgoingMessage | null => {\n  let payload;\n\n  switch (message) {\n    case OutgoingMessage.GameActive:\n    case OutgoingMessage.GameReady:\n      payload = message;\n      break;\n    case OutgoingMessage.CloseContainer:\n    case OutgoingMessage.GameLoadEnd:\n    case OutgoingMessage.GameLoadStart: // 1st message sent - no table config data\n    case OutgoingMessage.GameQuit:\n    case OutgoingMessage.OpenCashier:\n    case OutgoingMessage.RealityCheckContinue:\n    case OutgoingMessage.RealityCheckQuit:\n    case OutgoingMessage.RealityCheckShown:\n    case OutgoingMessage.RoundEnd:\n    case OutgoingMessage.RoundStart:\n      payload = { sender: info?.tableId ?? '' };\n      break;\n    default:\n      return null;\n  }\n  return {\n    name: message,\n    data: payload,\n  };\n};\n"],"names":["IncomingMessage","CrossOriginCommunicationDefault","process","message","store","CrossOriginCommunicationDefaultProcessor","StopAutoplay","dispatch","autoplayActions","stop","Logger","logEvent","Date","now","data","send","info","CrossOriginCommunicationDefaultSender","_info$tableId","payload","OutgoingMessage","GameActive","GameReady","CloseContainer","GameLoadEnd","GameLoadStart","GameQuit","OpenCashier","RealityCheckContinue","RealityCheckQuit","RealityCheckShown","RoundEnd","RoundStart","sender","tableId","name","_window$top","window","top","postMessage"],"sourceRoot":""}